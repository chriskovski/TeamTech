# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: grafana
#   namespace: teamtech-ns
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: grafana
#   template:
#     metadata:
#       name: grafana
#       labels:
#         app: grafana
#     spec:
#       containers:
#       - name: grafana
#         image: grafana/grafana:latest
#         ports:
#         - containerPort: 3000
#         env:
#         - name: GF_AUTH_DISABLE_LOGIN_FORM
#           value: "true"
#         resources:
#           limits:
#             memory: "1Gi"
#             cpu: "1000m"
#           requests: 
#             memory: 500M
#             cpu: "500m"
#         volumeMounts:
#           - mountPath: /var/lib/grafana
#             name: grafana-storage
#           - mountPath: /etc/grafana/provisioning/datasources
#             name: grafana-datasources
#             readOnly: false
#       volumes:
#         - name: grafana-storage
#           emptyDir: {}
#         - name: grafana-datasources
#           configMap:
#               defaultMode: 420
#               name: grafana-datasources


apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
data:
  grafana.ini: |
    [server]
    root_url = %(protocol)s://%(domain)s:%(http_port)s/grafana/

    [database]
    type = sqlite3
    path = /var/lib/grafana/grafana.db

    [security]
    admin_user = admin
    admin_password = admin

    [auth.anonymous]
    enabled = true

    [auth.basic]
    enabled = false

  dashboards.yml: |
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10
      options:
        path: /var/lib/grafana/dashboards

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        # env:
        # - name: GF_SECURITY_ADMIN_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       name: grafana-secret
        #       key: admin-password
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
        - name: grafana-config
          mountPath: /etc/grafana
          readOnly: true
      volumes:
      - name: grafana-data
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: grafana-config
        configMap:
          name: grafana-config
      # imagePullSecrets:
      # - name: regcred
