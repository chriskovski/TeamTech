apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sonarqube
  name: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
      # labels:
      #   app: sonarqube
    template:   
      metadata:
        labels:
          app: sonarqube
    spec:
      containers:
        - env:
            - name: SONARQUBE_JDBC_PASSWORD
              value: sonarpass
            - name: SONARQUBE_JDBC_URL
              value: jdbc:postgresql://sonarqube-database:5432/sonarqube
            - name: SONARQUBE_JDBC_USERNAME
              value: sonarqube
          image: sonarqube:latest
          name: sonarqube
          ports:
            - containerPort: 9000
          volumeMounts:
            - mountPath: /opt/sonarqube/conf
              name: sonarqube-conf
            - mountPath: /opt/sonarqube/data
              name: sonarqube-data
            - mountPath: /opt/sonarqube/extensions
              name: sonarqube-extensions
            - mountPath: /opt/sonarqube/lib/bundled-plugins
              name: sonarqube-bundled-plugins
      volumes:
        - name: sonarqube-conf
          persistentVolumeClaim:
            claimName: sonarqube-conf
        - name: sonarqube-data
          persistentVolumeClaim:
            claimName: sonarqube-data
        - name: sonarqube-extensions
          persistentVolumeClaim:
            claimName: sonarqube-extensions
        - name: sonarqube-bundled-plugins
          persistentVolumeClaim:
            claimName: sonarqube-bundled-plugins
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sonarqube
  name: sonarqube
spec:
  type: LoadBalancer
  ports:
    port: 9000
    targetPort: 9000
  selector:
    app: sonarqube
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sonarqube-database
  name: sonarqube-database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube-database
  template:
    metadata:
      labels:
        app: sonarqube-database
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: sonarqube
            - name: POSTGRES_PASSWORD
              value: sonarpass
            - name: POSTGRES_USER
              value: sonarqube
          image: postgres:12
          name: sonarqube-database
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql
              name: sonarqube-database
            - mountPath: /var/lib/postgresql/data
              name: sonarqube-database-data
      volumes:
        - name: sonarqube-database
          persistentVolumeClaim:
            claimName: sonarqube-database
        - name: sonarqube-database-data
          persistentVolumeClaim:
            claimName: sonarqube-database-data
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sonarqube-database
  name: sonarqube-database
spec:
  type: LoadBalancer
  ports:
    port: 5432
    targetPort: 5433
  selector:
    app: sonarqube-database

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: sonarqube-conf
  name: sonarqube-conf
spec:
  # accessModes:
  #   - ReadWriteOnce
  capacity:
    storage: 100Mi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: sonarqube-data
  name: sonarqube-data
spec:
  # accessModes:
  #   - ReadWriteOnce
  capacity:
    storage: 100Mi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: sonarqube-extensions
  name: sonarqube-extensions
spec:
  # accessModes:
  #   - ReadWriteOnce
  capacity:
    storage: 100Mi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: sonarqube-bundled-plugins
  name: sonarqube-bundled-plugins
spec:
  # accessModes:
  #   - ReadWriteOnce
  capacity:
    storage: 100Mi

# ---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   creationTimestamp: null
#   name: teamtech-default
# spec:
#   ingress:
#     - from:
#         - podSelector:
#             matchLabels:
#               io.kompose.network/teamtech-default: "true"
#   podSelector:
#     matchLabels:
#       io.kompose.network/teamtech-default: "true"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: sonarqube-database
  name: sonarqube-database
spec:
  # accessModes:
  #   - ReadWriteOnce
  capacity:
    storage: 100Mi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: sonarqube-database-data
  name: sonarqube-database-data
spec:
  # accessModes:
  #   - ReadWriteOnce
  capacity:
    storage: 100Mi

